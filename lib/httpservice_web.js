// Generated by CoffeeScript 1.6.2
(function() {
  var GWebHttpService, e,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  GWebHttpService = (function() {
    function GWebHttpService() {
      this.oembedRequest = __bind(this.oembedRequest, this);
    }

    GWebHttpService.prototype.timeout = 5000;

    GWebHttpService.prototype.uniq_fn_id = 1;

    GWebHttpService.prototype.callbacks = {};

    GWebHttpService.prototype.oembedRequest = function(url, ok_callback, error_callback, content_url) {
      var callback, callback_data, callback_id, enc_url, onem_url, script, uniq_fn_id,
        _this = this;

      uniq_fn_id = this.uniq_fn_id++;
      callback_id = "callback_" + uniq_fn_id;
      callback_data = this.callbacks[callback_id] = {
        'ok': ok_callback,
        'error': error_callback,
        'timeout': null,
        'script': null
      };
      callback = this[callback_id] = function(data) {
        callback_data = _this.callbacks[callback_id];
        if (callback_data) {
          if (data && !data.error) {
            callback_data.ok(data);
          } else {
            callback_data.error(data);
          }
          delete _this[callback_id];
          delete _this.callbacks[callback_id];
          callback_data.script.parentNode.removeChild(script);
          return clearTimeout(callback_data.timeout);
        }
      };
      callback_data.timeout = setTimeout(function() {
        return callback({
          'error': 'Tiemout'
        });
      }, this.timeout);
      enc_url = encodeURIComponent(content_url.replace('https', 'http'));
      onem_url = "https://noembed.com/embed?url=" + enc_url + "&callback=WebHttpService." + callback_id;
      callback_data.script = script = document.createElement('script');
      script.setAttribute('src', onem_url);
      script.setAttribute('type', 'text/javascript');
      return document.getElementsByTagName("head")[0].appendChild(script);
    };

    return GWebHttpService;

  })();

  try {
    window.WebHttpService = new GWebHttpService();
  } catch (_error) {
    e = _error;
    null;
  }

}).call(this);
